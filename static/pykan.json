{"ANKIConfig":{"GIT_URL":"https://github.com/KindXiaoming/pykan/blob/master/"},"kan__KAN__KAN____init__":{"label":"__init__","systemPath":"C:/Users/sanju/Desktop/projects/explore/pykan\\kan\\KAN.py:80","relativePath":"kan/KAN.py","lineNo":"80","emgithubIframeLink":"https://emgithub.com/iframe.html?target=https%3A%2F%2Fgithub.com%2FKindXiaoming%2Fpykan%2Fblob%2Fmaster%2Fkan%2FKAN.py%23L80-L130&style=default&type=code&showBorder=on&showLineNumbers=on&showFileMeta=on&showFullPath=on&showCopy=on","description":"Parent class for KAN"},"kan__KAN__KAN__train":{"label":"train","systemPath":"C:/Users/sanju/Desktop/projects/explore/pykan\\kan\\KAN.py:762","relativePath":"kan/KAN.py","lineNo":"762","emgithubIframeLink":"https://emgithub.com/iframe.html?target=https%3A%2F%2Fgithub.com%2FKindXiaoming%2Fpykan%2Fblob%2Fmaster%2Fkan%2FKAN.py%23L762-L812&style=default&type=code&showBorder=on&showLineNumbers=on&showFileMeta=on&showFullPath=on&showCopy=on","description":"[Quick summary]\n\nThis function trains a mathematical model to represent a relationship between input and output data. It does this by iteratively adjusting the model parameters to minimize the difference between the model's predictions and the actual output data (loss). The function also incorporates various regularization penalties to prevent overfitting.\n\n**Purpose:** Train a model to learn from data.\n\n[Inputs]\n\n* `dataset`: A dictionary containing training and testing data for the model.\n* `opt`: Optimization algorithm to use for training (\"LBFGS\" or \"Adam\").\n* `steps`: Number of training iterations.\n* Other parameters control aspects of the training process like learning rate, types of regularization, and logging frequency.\n\n[Output]\n\n* `results`: A dictionary containing the training and testing loss (RMSE), regularization penalty, and optionally other metrics tracked during training."},"kan__KANLayer__KANLayer__update_grid_from_samples":{"label":"update_grid_from_samples","systemPath":"C:/Users/sanju/Desktop/projects/explore/pykan\\kan\\KANLayer.py:185","relativePath":"kan/KANLayer.py","lineNo":"185","emgithubIframeLink":"https://emgithub.com/iframe.html?target=https%3A%2F%2Fgithub.com%2FKindXiaoming%2Fpykan%2Fblob%2Fmaster%2Fkan%2FKANLayer.py%23L185-L235&style=default&type=code&showBorder=on&showLineNumbers=on&showFileMeta=on&showFullPath=on&showCopy=on","description":"[Quick summary]\n\nThis function updates the internal grid of a mathematical model based on new input data. The grid is used to represent the relationship between the model's inputs and outputs. The purpose is to potentially improve the model's accuracy by adapting the grid to better capture the data distribution.\n\n[Inputs]\n\n* `x`: A 2D tensor representing a batch of input data points.\n\n[Output]\n\n* None (the function updates the model's internal state).\n"},"kan__KAN__KAN__update_grid_from_samples":{"label":"update_grid_from_samples","systemPath":"C:/Users/sanju/Desktop/projects/explore/pykan\\kan\\KAN.py:219","relativePath":"kan/KAN.py","lineNo":"219","emgithubIframeLink":"https://emgithub.com/iframe.html?target=https%3A%2F%2Fgithub.com%2FKindXiaoming%2Fpykan%2Fblob%2Fmaster%2Fkan%2FKAN.py%23L219-L269&style=default&type=code&showBorder=on&showLineNumbers=on&showFileMeta=on&showFullPath=on&showCopy=on","description":"[Quick summary]\n\nThis function iteratively refines a grid within a multi-layer mathematical model based on input data. The grid helps represent the relationship between the model's layers. The purpose is to potentially improve the model's accuracy by adapting the grid to better capture the data flowing through the layers.\n\n[Inputs]\n\n* `x`: A 2D tensor representing a batch of input data points.\n\n[Output]\n\n* None (the function updates the model's internal state).\n"}}